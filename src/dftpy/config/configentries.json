{
  "JOB": {
    "task": {
      "type": "cstr",
      "default": "Optdensity",
      "comment": "The task to be performed.",
      "options": "Optdensity, Calculation, Propagate, Casida, Diagonalize, Inversion"
    },
    "calctype": {
      "type": "cstrlist",
      "default": "Energy",
      "comment": "The property to be calculated.",
      "options": "Energy, Potential, Both, Force, Stress"
    }
  },
  "PATH": {
    "pppath": {
      "type": "str",
      "default": "./"
    },
    "cellpath": {
      "type": "str",
      "default": "./"
    }
  },
  "MATH": {
    "linearii": {
      "type": "bool",
      "default": true
    },
    "linearie": {
      "type": "bool",
      "default": true
    },
    "twostep": {
      "type": "bool",
      "default": false
    },
    "multistep": {
      "type": "int",
      "default": 1
    },
    "reuse": {
      "type": "bool",
      "default": true
    }
  },
  "PP": {},
  "CELL": {
    "cellfile": {
      "type": "str",
      "default": "POSCAR"
    },
    "elename": {
      "type": "cstrlist",
      "default": "Al"
    },
    "zval": {
      "type": "floatlist",
      "default": null
    },
    "format": {
      "type": "str",
      "default": null
    }
  },
  "GRID": {
    "ecut": {
      "type": "float",
      "default": 600, 
      "unit": "Angstrom"
    },
    "spacing": {
      "type": "float",
      "default": null,
      "unit": "eV"
    },
    "gfull": {
      "type": "bool",
      "default": false
    },
    "nr": {
      "type": "intlist",
      "default": null
    },
    "maxprime": {
      "type": "int",
      "default": 13
    },
    "scale": {
      "type": "float",
      "default": 0.99
    },
    "cplx": {
      "type": "bool",
      "default": false
    }
  },
  "DENSITY": {
    "nspin": {
      "type": "int",
      "default": 1
    },
    "magmom": {
      "type": "float",
      "default": 0
    },
    "densityini": {
      "type": "str",
      "default": "HEG"
    },
    "densityfile": {
      "type": "str",
      "default": null
    },
    "densityoutput": {
      "type": "str",
      "default": null
    }
  },
  "EXC": {
    "xc": {
      "type": "str",
      "default": "LDA"
    },
    "x_str": {
      "type": "str",
      "default": "lda_x"
    },
    "c_str": {
      "type": "str",
      "default": "lda_c_pz"
    }
  },
  "KEDF": {
    "kedf": {
      "type": "str",
      "default": "WT"
    },
    "x": {
      "type": "float",
      "default": 1
    },
    "y": {
      "type": "float",
      "default": 1
    },
    "alpha": {
      "type": "float",
      "default": 0.8333333333333333
    },
    "beta": {
      "type": "float",
      "default": 0.8333333333333333
    },
    "sigma": {
      "type": "float",
      "default": null
    },
    "nsp": {
      "type": "int",
      "default": null
    },
    "interp": {
      "type": "str",
      "default": "hermite"
    },
    "kerneltype": {
      "type": "str",
      "default": "WT"
    },
    "symmetrization": {
      "type": "str",
      "default": null
    },
    "lumpfactor": {
      "type": "floatlist",
      "default": null
    },
    "neta": {
      "type": "int",
      "default": 50000
    },
    "etamax": {
      "type": "float",
      "default": 50
    },
    "order": {
      "type": "int",
      "default": 3
    },
    "ratio": {
      "type": "float",
      "default": 1.2
    },
    "maxpoints": {
      "type": "int",
      "default": 1000
    },
    "delta": {
      "type": "float",
      "default": null,
      "comment": "The gap of spline"
    },
    "fd": {
      "type": "int",
      "default": 0
    },
    "kdd": {
      "type": "int",
      "default": 3,
      "comment": "kernel density denpendent"
    },
    "rho0": {
      "type": "float",
      "default": null
    },
    "k_str": {
      "type": "str",
      "default": "gga_k_revapbe"
    },
    "params": {
      "type": "floatlist",
      "default": null
    },
    "kfmin": {
      "type": "float",
      "default": null
    },
    "kfmax": {
      "type": "float",
      "default": null
    },
    "rhomax": {
      "type": "float",
      "default": null
    },
    "ldw": {
      "type": "float",
      "default": null
    }
  },
  "OUTPUT": {
    "time": {
      "type": "bool",
      "default": true
    },
    "stress": {
      "type": "bool",
      "default": true
    }
  },
  "OPT": {
    "method": {
      "type": "str",
      "default": "CG-HS"
    },
    "algorithm": {
      "type": "str",
      "default": "EMM",
      "comment": "Residual minimization method or Energy minimization method"
    },
    "vector": {
      "type": "str",
      "default": "Orthogonalization",
      "comment": "or Scaling"
    },
    "c1": {
      "type": "float",
      "default": 0.0001
    },
    "c2": {
      "type": "float",
      "default": 0.2
    },
    "maxls": {
      "type": "int",
      "default": 10
    },
    "econv": {
      "type": "float",
      "default": 1e-06,
      "comment": "Energy Convergence (a.u./atom)", 
      "unit": "a.u./atom"
    },
    "maxfun": {
      "type": "int",
      "default": 50,
      "comment": "For TN method, it's the max steps for searching direction"
    },
    "maxiter": {
      "type": "int",
      "default": 100,
      "comment": "The max steps for optimization"
    },
    "xtol": {
      "type": "float",
      "default": 1e-12
    },
    "h0": {
      "type": "float",
      "default": 1,
      "comment": "for LBFGS"
    }
  },
  "PROPAGATOR": {
    "type": {
      "type": "str",
      "default": "crank-nicolson",
      "comment": "The type of propagator.",
      "options": "crank-nicolson, taylor, rk4 (experimental)"
    },
    "order": {
      "type": "int",
      "default": 20,
      "comment": "The order used for the Taylor expansion propagator."
    },
    "linearsolver": {
      "type": "str",
      "default": "cg",
      "comment": "The linear solver used for the Crank-Nicolson propagator. The solvers with a name end with `-scipy` are from the `SciPy` package and should be used in serial calculations only. ",
      "options": "bicg, bicgstab, cg, bicg-scipy, bicgstab-scipy, cg-scipy, cgs-scipy, gmres-scipy, lgmres-scipy, minres-scipy, qmr-scipy"
    },
    "tol": {
      "type": "float",
      "default": 1e-10,
      "comment": "The relative tolerance for the linear solver used for the Crank-Nicolson propagator."
    },
    "maxiter": {
      "type": "int",
      "default": 100,
      "comment": "The max amount of iteration steps for the linear solver used for the Crank-Nicolson propagator."
    },
    "atol": {
      "type": "float",
      "default": null,
      "comment": "The absolute tolerance for the linear solver used for the Crank-Nicolson propagator."
    }
  },
  "TD": {
    "outfile": {
      "type": "str",
      "default": "td_out",
      "comment": "The prefix of the output files."
    },
    "timestep": {
      "type": "float",
      "default": 0.001,
      "comment": "The time step in atomic units."
    },
    "tmax": {
      "type": "float",
      "default": 1,
      "comment": "The total amount of time in atomic units."
    },
    "max_pc": {
      "type": "int",
      "default": 1,
      "comment": "The max amount of the predictor-corrector steps."
    },
    "tol_pc": {
      "type": "float",
      "default": 1e-8,
      "comment": "The relative tolerance for the predictor-corrector."
    },
    "atol_pc": {
      "type": "float",
      "default": 1e-10,
      "comment": "The absolute tolerance for the predictor-corrector."
    },
    "direc": {
      "type": "direction",
      "default": 0,
      "comment": "The direction of the initial kick.",
      "options": "0 or x, 1 or y, 2 or z"
    },
    "strength": {
      "type": "float",
      "default": 0.001,
      "comment": "The strength of the initial kick in atomic units."
    },
    "dynamic_potential": {
      "type": "bool",
      "default": false,
      "comment": "Include dynamic potential. (See Eq. (15) of `paper <https://journals.aps.org/prb/abstract/10.1103/PhysRevB.98.144302>`_."
    },
    "max_runtime": {
      "type": "float",
      "default": 0,
      "comment": "Max amount of running time in seconds before the program saves the intermediate result and quitting."
    },
    "restart": {
      "type": "bool",
      "default": false,
      "comment": "Restart the propagation from a previously saved intermediate result."
    }
  },
  "CASIDA": {
    "numeig": {
      "type": "int",
      "default": null,
      "comment": "Number of eigenstates used in constructing casida matrix."
    },
    "diagonalize": {
      "type": "bool",
      "default": true,
      "comment": "If true, diagonalize the Hamiltonian before construct the Casida matrix. If false, read the eigenstates from a saved file."
    },
    "tda": {
      "type": "bool",
      "default": false,
      "comment": "Use Tamm-Dancoff approximation."
    }
  },
  "INVERSION": {
    "rho_in": {
      "type": "str",
      "default": null,
      "comment": "Input file for the density."
    },
    "v_out": {
      "type": "str",
      "default": null,
      "comment": "Output file for the potential."
    }
  }
}
